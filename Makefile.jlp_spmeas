##################################################################
# Makefile for jlp_spmeas program 
#
# JLP
# Version 03/03/2020
##################################################################

# To check it, type "echo %OS%" on Windows command terminal
ifeq ($(OS),Windows_NT)
JLP_SYSTEM=Windows
else
JLP_SYSTEM=Linux
endif

##############################################################
# Linux CENTOS6:
##############################################################
ifeq ($(JLP_SYSTEM),Linux)

CPP=c++

JLPLIB_DIR = $(JLPSRC)/jlplib
CFITSIO_INCL_DIR=$(JLPLIB_DIR)/jlp_cfitsio/incl

CXFLAGS = `wx-config --cppflags` $(MY_INCL)

mylib=$(JLPLIB)/jlp
MATHLIB = $(JLPLIB)/jlp/jlp_numeric.a $(JLPLIB)/math/libfftw3.a

PATHSEP1=/

#WX_LIB = -L/usr/local/lib -pthread   -lwx_baseu-2.9 -lwx_gtk2u_core-2.9
WX_LIB := `wx-config --libs base,core`

else
##############################################################
# Windows operating system:
##############################################################

CPP=c++

# To avoid console apparition:
NO_CONSOLE=-mwindows 

# C++ flags to use with wxWidgets code
WX_INCLUDE_DIR= C:\\wxWidgets-3.0.2_32bits\\include

# Windows: I add USE_XPM (USE_XPM is needed to have the icon)
CXFLAGS = -DUSE_XPM -I$(WX_INCLUDE_DIR) $(MY_INCL)

# Need two back slashes for Linux compatibility:
PATHSEP1=\\

JLPLIB_DIR = c:\\jlp_src\\jlplib
CFITSIO_INCL_DIR=$(JLPLIB_DIR)\\jlp_cfitsio\\incl

EXEC=c:\\EXEC

mylib=c:\\EXEC\\MyLib
MATHLIB = $(mylib)$(PATHSEP)jlp_numeric.a $(mylib)$(PATHSEP)libfftw3.a
WX_LIB_DIR= C:\\wxWidgets-3.1.1\\build-debug\\lib
WX_LIB = -L$(WX_LIB_DIR) -lwx_baseu-3.1 -lwx_mswu_core-3.1

endif
##############################################################

#Remove extra blank before $(PATHSEP1):
PATHSEP=$(strip $(PATHSEP1))

EXEC_DIR = $(EXEC)$(PATHSEP)
#	
JJJ = \
	-I$(JLPLIB_DIR)$(PATHSEP)jlp_splot_idv \
	-I$(JLPLIB_DIR)$(PATHSEP)jlp_gsegraf$(PATHSEP)jlp_gsegraf_include  \
	-I$(JLPLIB_DIR)$(PATHSEP)jlp_gseg_wxwid  \

#

MY_INCL=-I. \
	-I$(JLPLIB_DIR)$(PATHSEP)jlp_wxplot$(PATHSEP)jlp_wxplot_include \
	-I$(JLPLIB_DIR)$(PATHSEP)jlp_splot_idv \
	-I$(JLPLIB_DIR)$(PATHSEP)jlp_splot  \
	-I$(JLPLIB_DIR)$(PATHSEP)jlp_gsegraf$(PATHSEP)jlp_gsegraf_include  \
	-I$(JLPLIB_DIR)$(PATHSEP)jlp_gseg_wxwid  \
	-I$(JLPLIB_DIR)$(PATHSEP)jlp_fits \
	-I$(JLPLIB_DIR)$(PATHSEP)jlp_numeric \
	-I$(CFITSIO_INCL_DIR)

FITSLIB=$(mylib)$(PATHSEP)jlp_fits.a $(mylib)$(PATHSEP)libcfitsio.a 
MY_LIB= $(mylib)$(PATHSEP)jlp_wxplot.a $(mylib)$(PATHSEP)jlp_splot.a \
  $(mylib)$(PATHSEP)jlp_splot_idv.a $(mylib)$(PATHSEP)jlp_splot.a \
  $(mylib)$(PATHSEP)jlp_gsegraf.a $(mylib)$(PATHSEP)jlp_gseg_wxwid.a \
  $(mylib)$(PATHSEP)jlp_numeric.a \
  $(MATHLIB) $(FITSLIB) -lm


JM_OBJ = spm_frame_menu.o jlp_spmeas_autom.o jlp_spmeas_utils.o \
	jlp_spmeas_latex.o jlp_spmeas_dlg.o jlp_spmeas_theta_calib.o 

JM_SRC = $(JM_OBJ:.o=.cpp)

JM_DEP = spm_frame.h spm_frame_id.h jlp_spmeas_def.h \
	jlp_spmeas_utils.h jlp_spmeas_latex.h jlp_spmeas_dlg.h
 
.SUFFIXES:
.SUFFIXES: .o .cpp .exe $(SUFFIXES) 

.cpp.o:
	$(CPP) -c -g $(CXFLAGS) $*.cpp

.o.exe:
	$(CPP) -o $(EXEC_DIR)$*.exe $*.o $(JM_OBJ) $(MY_LIB) $(WX_LIB) 

.cpp.exe:
	$(CPP) -c -g $(CXFLAGS) $*.cpp
	$(CPP) -o $(EXEC_DIR)$*.exe $*.o $(JM_OBJ) $(MY_LIB) $(WX_LIB)

### Targets: ###

all: $(JM_OBJ) jlp_spmeas.exe 

jlp_spmeas.o : jlp_spmeas.cpp $(JM_DEP)

jlp_spmeas_autom.o : jlp_spmeas_autom.cpp $(JM_DEP)

jlp_spmeas_utils.o : jlp_spmeas_utils.cpp $(JM_DEP)

jlp_spmeas_latex.o : jlp_spmeas_latex.cpp $(JM_DEP)

########################################################
# Linux:
ifeq ($(JLP_SYSTEM),Linux)

jlp_spmeas.exe: jlp_spmeas.cpp  $(JM_DEP)

else
########################################################
# Windows:
jlp_spmeas_rc.o: jlp_spmeas.rc
        windres --use-temp-file --define USE_XPM -I$(WX_INCLUDE_DIR) jlp_spmeas.rc \
        -o jlp_spmeas_rc.o --define __WXMSW__ --define NOPCH

jlp_spmeas.exe: $(JM_OBJ) jlp_spmeas.cpp jlp_spmeas_rc.o
        $(CPP) $(CXFLAGS) $(NO_CONSOLE) -o $(EXEC_DIR)$@ jlp_spmeas.cpp \
        jlp_spmeas_rc.o $(JM_OBJ) $(MY_LIB) \
        $(WX_LIB) -lm
# Missing DLL's:
# libgcc_s_dw2-1.dll, libstdc++-6.dll
# I also tried adding the linker options: -static-libgcc -static-libstdc++
# but it did not work.
########################################################
endif

clear: clean

clean: 
	rm -f jlp_spmeas.o $(JM_OBJ) 
